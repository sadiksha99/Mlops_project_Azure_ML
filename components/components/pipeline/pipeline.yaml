name: Azure ML Pipeline Setup

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  GROUP: mlops-project
  WORKSPACE: sadiksha-sapkota-ml
  LOCATION: westeurope
  COMPUTE_NAME: cli-created-machine-v2

jobs:
  setup-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure -- Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure CLI + ML extension
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az extension add --name ml -y
          az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION

      - name: Azure -- Ensure Compute Exists
        run: |
          if ! az ml compute show --name $COMPUTE_NAME > /dev/null 2>&1; then
            az ml compute create --file ./environment/compute.yaml
          else
            echo "✅ Compute '$COMPUTE_NAME' already exists."
          fi

      - name: Azure -- Start Compute (if needed)
        run: |
          STATUS=$(az ml compute show --name $COMPUTE_NAME --query "status.state" -o tsv)
          echo "Compute status: $STATUS"
          if [[ "$STATUS" != "Running" ]]; then
            az ml compute start --name $COMPUTE_NAME
          else
            echo "✅ Compute is already running."
          fi

      - name: Azure -- Register Environments
        run: |
          az ml environment create --file ./environment/pillow.yaml
          az ml environment create --file ./environment/tensorflow.yaml

      - name: Azure -- Register Components
        run: |
          az ml component create --file ./components/components/dataprep/dataprep.yaml
          az ml component create --file ./components/components/dataprep/data_split.yaml
          az ml component create --file ./components/components/training/training.yaml

      - name: Azure -- Submit MNIST Training Pipeline
        run: |
          az ml job create \
            --file ./pipeline/pipeline.yaml \
            --stream \
            --set name=mnist-pipeline-${{ github.sha }}-${{ github.run_id }}
