name: Azure ML Pipeline Setup

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write  # üëà Necessary for GitHub Releases to work

env:
  GROUP: mlops-project
  WORKSPACE: sadiksha-sapkota-ml
  LOCATION: westeurope
  COMPUTE_NAME: cli-created-machine-v2
  MODEL_NAME: mnist-classifier


jobs:
  azure-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: üîê Azure -- Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üõ† Install Azure CLI + ML extension
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az extension add --name ml -y
          az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION

      - name: ‚öôÔ∏è Azure -- Create compute if not exists
        run: |
          if ! az ml compute show --name $COMPUTE_NAME > /dev/null 2>&1; then
            az ml compute create --file ./environment/compute.yaml
          fi

      - name: üöÄ Azure -- Start Compute (only if stopped)
        run: |
          STATUS=$(az ml compute show --name $COMPUTE_NAME --query "status.state" -o tsv || echo "Unknown")
          if [[ "$STATUS" == "Stopped" ]]; then
            az ml compute start --name $COMPUTE_NAME || echo "‚ö†Ô∏è Start failed"
          fi
        continue-on-error: true

      - name: üß™ Azure -- Register Environments
        run: |
          az ml environment create --file ./environment/pillow.yaml
          az ml environment create --file ./environment/tensorflow.yaml

      - name: üß© Azure -- Register Components
        run: |
          az ml component create --file ./components/components/dataprep/dataprep.yaml
          az ml component create --file ./components/components/dataprep/data_split.yaml
          az ml component create --file ./components/components/training/training.yaml

      - name: üì¶ Azure -- Submit MNIST Training Pipeline
        run: |
          az ml job create \
            --file ./components/components/pipeline/pipeline.yaml \
            --stream \
            --set name=mnist-pipeline-${{ github.sha }}-${{ github.run_id }}

  download-model:
    needs: azure-pipeline
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: üîê Azure -- Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üì• Azure -- Download latest model
        run: |
          az extension add --name ml -y
          az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION

          VERSION=$(az ml model list -n $MODEL_NAME --query "[0].version" -o tsv)
          echo "üì¶ Latest model version: $VERSION"

          mkdir -p downloaded_model
          az ml model download --name $MODEL_NAME --version $VERSION --download-path downloaded_model

          cd downloaded_model
          zip -r ../mnist-model-$VERSION.zip .
          cd ..

      - name: üöÄ Upload model as GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: model-v${{ github.run_number }}
          name: MNIST Model ${{ github.run_number }}
          files: mnist-model-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
